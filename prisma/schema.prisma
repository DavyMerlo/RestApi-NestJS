generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int           @id @default(autoincrement())
  firstName     String        @db.VarChar(30)
  lastName      String        @db.VarChar(30)
  email         String        @unique
  hash          String        @db.VarChar(100)
  hashedRt      String?
  userAddresses UserAddress[]
  userOrders    UserOrder[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Address {
  id            Int           @id @default(autoincrement())
  street        String        @db.VarChar(35)
  houseNumber   String        @db.VarChar(10)
  postalCode    String        @db.VarChar(5)
  city          String        @db.VarChar(25)
  country       String        @db.VarChar(25)
  userAddresses UserAddress[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model UserAddress {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  address   Address  @relation(fields: [addressId], references: [id])
  addressId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, addressId])
}

model Product {
  id            Int         @id @default(autoincrement())
  name          String      @db.VarChar(50)
  description   String      @db.VarChar(255)
  price         Decimal     @db.Decimal(10, 2)
  release       DateTime
  subCategory   SubCategory @relation(fields: [subCategoryId], references: [id])
  subCategoryId Int
  orderLines    OrderLine[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Category {
  id            Int           @id @default(autoincrement())
  name          String        @unique
  subCategories SubCategory[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model SubCategory {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  products   Product[]
}

model Order {
  id         Int         @id @default(autoincrement())
  date       DateTime
  userOrders UserOrder[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  orderLines OrderLine[]
}

model UserOrder {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, orderId])
}

model OrderLine {
  id        Int      @id @default(autoincrement())
  quantity  Int
  product   Product? @relation(fields: [productId], references: [id])
  productId Int
  order     Order?   @relation(fields: [orderId], references: [id])
  orderId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
